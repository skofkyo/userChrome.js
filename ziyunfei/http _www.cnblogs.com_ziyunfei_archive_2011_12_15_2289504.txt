<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<title>鼠标手势UserChromeJS脚本在线生成器 - 紫云飞 - 博客园</title>
<link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=Ugwf7ssw_T-Y4bsdVDPHPhPR9NEESRNHOF-E8IRqEJk1
<view-source:http://www.cnblogs.com/bundles/blog-common.css?v=Ugwf7ssw_T-Y4bsdVDPHPhPR9NEESRNHOF-E8IRqEJk1>"/>
<link type="text/css" rel="stylesheet" href="/blog/customcss/102213.css?v=B42NJ1vgiRr4veXO%2fdFkCWZvWv0%3d
<view-source:http://www.cnblogs.com/blog/customcss/102213.css?v=B42NJ1vgiRr4veXO%2fdFkCWZvWv0%3d>"/>
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/ziyunfei/rss
<view-source:http://www.cnblogs.com/ziyunfei/rss>"/>
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/ziyunfei/rsd.xml
<view-source:http://www.cnblogs.com/ziyunfei/rsd.xml>"/>
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/ziyunfei/wlwmanifest.xml
<view-source:http://www.cnblogs.com/ziyunfei/wlwmanifest.xml>"/>
<script src="//common.cnblogs.com/script/jquery.js
<view-source:http://common.cnblogs.com/script/jquery.js>" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'ziyunfei', cb_enable_mathjax=false;var isLogined=false;</script>
<script src="/bundles/blog-common.js?v=Q7JqGMCRFJwGRojUTJLkQ6nIu4kUBVwm5mErn4um_MM1
<view-source:http://www.cnblogs.com/bundles/blog-common.js?v=Q7JqGMCRFJwGRojUTJLkQ6nIu4kUBVwm5mErn4um_MM1>" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>
<div id="page_begin_html"></div><script>load_page_begin_html();</script>

<div id="home">
<div id="header">
	<div id="blogTitle">
		
<!--done-->
<div class="title"><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/ziyunfei/
<view-source:http://www.cnblogs.com/ziyunfei/>">紫云飞</a></div>
<div class="subtitle"></div>



		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li id="nav_sitehome"><a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/ <view-source:http://www.cnblogs.com/>">博客园</a></li>
<li id="nav_myhome"><a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/ziyunfei/
<view-source:http://www.cnblogs.com/ziyunfei/>">首页</a></li>
<li id="nav_newpost"></li>
<li id="nav_contact"></li>
<li id="nav_rss"><a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/ziyunfei/rss
<view-source:http://www.cnblogs.com/ziyunfei/rss>">订阅</a>
<!--<a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/ziyunfei/rss"><img src="//www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></li>
<li id="nav_admin"><a id="MyLinks1_Admin" class="menu" rel="nofollow" href="https://i.cnblogs.com/ <view-source:https://i.cnblogs.com/>">管理</a></li>
</ul>

		<div class="blogStats">
			
			
<!--done-->
随笔-166&nbsp;
文章-2&nbsp;
评论-406&nbsp;

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<div id="post_detail">
<!--done-->
<div id="topics">
	<div class = "post">
		<h1 class = "postTitle">
			<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/ziyunfei/archive/2011/12/15/2289504.html
<view-source:http://www.cnblogs.com/ziyunfei/archive/2011/12/15/2289504.html>">鼠标手势UserChromeJS脚本在线生成器</a>
		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body"><form id="ucjsMouseGestures"><label>手势方向:<select id="gesturesChain" onchange="MouseGestures.onChange()">
<option title="U" value="U">上</option>
<option title="D" value="D">下</option>
<option title="L" value="L">左</option>
<option title="R" value="R">右</option>
<option title="UD" value="UD">上下</option>
<option title="UL" value="UL">上左</option>
<option title="UR" value="UR">上右</option>
<option title="DU" value="DU">下上</option>
<option title="DL" value="DL">下左</option>
<option title="DR" value="DR">下右</option>
<option title="LR" value="LR">左右</option>
<option title="LU" value="LU">左上</option>
<option title="LD" value="LD">左下</option>
<option title="RL" value="RL">右左</option>
<option title="RU" value="RU">右上</option>
<option title="RD" value="RD">右下</option>
<option title="L&lt;R" value="L&lt;R">按住右键点左键</option>
<option title="L&gt;R" value="L&gt;R">按住左键点右键</option>
<option title="W+" value="W+">按住右键向上滚轮</option>
<option title="W-" value="W-">按住右键向下滚轮</option>
</select>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </label> <label>手势命令:<select id="gesturesCommand" onchange="MouseGestures.doNotGenerate()"></select></label> &nbsp;&nbsp;&nbsp; <label><input id="generateScript" onclick="MouseGestures.generateScript()" type="button" value="添加" /></label> &nbsp; <label><input id="deleteScript" onclick="MouseGestures.generateScript(1)" type="button" value="删除" disabled="disabled" /></label> &nbsp; <label><input id="copyScript" onclick="MouseGestures.copyScript()" type="button" value="复制脚本" /></label> &nbsp; <label title="Firefox3.6可用"><input id="runScript" onclick="MouseGestures.runScript()" type="button" value="运行脚本" /></label> &nbsp; <label><input id="openChromeDir" onclick="MouseGestures.openChrome()" type="button" value="打开chrome目录" /></label> &nbsp; <label title="在桌面生成xpi文件"><input id="makeXPI" onclick="MouseGestures.makeXPI()" type="button" value="生成扩展" /></label> &nbsp;&nbsp;&nbsp; <label title="否则汉字可能成为乱码"><input id="escapeunicode" onclick="MouseGestures.generateScript(0,1)" type="checkbox" checked="checked" />转义汉字</label> &nbsp; <label title="中文注释不会引起乱码"><input id="showComment" onclick="MouseGestures.generateScript(0,1)" type="checkbox" checked="checked" />添加注释</label> &nbsp; <label title="绿色"><input id="showline" onclick="MouseGestures.generateScript(0,1)" type="checkbox" />描绘轨迹</label>
<script type="text/javascript">// <![CDATA[
(function ($) {
	$.fn.extend({
		colorpicker: function (options) {
			//Settings list and the default values
			var defaults = {
				label: '',
				size: 20,
				count: 6,
				hide: true
			};
			var options = $.extend(defaults, options);
			var obj;
			var colors = {};
			var wrap = $('<div class="colorpicker-wrap"></div>');
			var label = $('<div class="colorpicker-label"></div>');
			var trigger = $('<div class="colorpicker-trigger"></div>');
			var picker = $('<div style="width: ' + (options.size + 4) * options.count + 'px" class="colorpicker-picker"></div>');
			var info = $('<div class="colorpicker-picker-info"></div>');
			var clear = $('<div style="clear:both;"></div>');
			return this.each(function () {
				obj = this;
				//build an array of colors
				$(obj).children('option').each(function (i, elm) {
					colors[i] = {};
					colors[i].color = $(elm).text();
					colors[i].value = $(elm).val();
				});
				create_wrap();
				if (options.label != '') create_label();
				create_trigger();
				create_picker();
				wrap.append(label);
				wrap.append(trigger);
				wrap.append(picker);
				wrap.append(clear);
				$(obj).after(wrap);
				if (options.hide) $(obj).css({
					position: 'absolute',
					left: -10000
				});
			});

			function create_wrap() {
				wrap.mouseleave(function () {
					picker.fadeOut('slow');
				});
			}

			function create_label() {
				label.text(options.label);
				label.click(function () {
					trigger.click()
				});
			}

			function create_trigger() {
				trigger.click(function () {
					var offset = $(this).position();
					var top = offset.top + 15;
					var left = offset.left - $(this).width() - 50;
					$(picker).css({
						'top': top,
						'left': left
					}).fadeIn('slow');
				});
			}

			function create_picker() {
				picker.append(info);
				for (var i in colors) {
					picker.append('<span class="colorpicker-picker-span ' + (colors[i].color == $(obj).children(":selected").text() ? ' active' : '') + '" rel="' + colors[i].value + '" style="background-color: #' + colors[i].color + '; width: ' + options.size + 'px; height: ' + options.size + 'px;"></span>');
				}
				trigger.css('background-color', '#' + $(obj).children(":selected").text());
				info.text('#' + $(obj).children(":selected").text());
				picker.children(".colorpicker-picker-span").hover(function () {
					info.text('#' + $(this).attr('rel'));
				}, function () {
					info.text('#' + picker.children('.colorpicker-picker-span.active').attr('rel'));
				});
				picker.delegate(".colorpicker-picker-span", "click", function () {
					$(obj).val($(this).attr('rel'));
					$(obj).change();
					if($("#showline:checked").length){
						MouseGestures.generateScript(0,1)
					}
				});
				$(obj).change(function () {
					var val = $(obj).val();
					info.text('#' + val);
					picker.children('.colorpicker-picker-span.active').removeClass('active');
					var active = $(picker).find('span.colorpicker-picker-span[rel="' + val + '"]');
					$(active).addClass('active');
					trigger.css('background-color', '#' + val);
				});
				$(obj).after(picker);
			}
		}
	});
})(jQuery);
$(document).ready(function () {
	$("head").append('<link type="text/css" rel="stylesheet" href="data:text/css;charset=UTF-8;base64,LmNvbG9ycGlja2VyLXBpY2tlci1zcGFuewogICAgZGlzcGxheTogYmxvY2s7CiAgICB3aWR0aDogMjBweDsKICAgIGhlaWdodDogMjBweDsKICAgIGZsb2F0OiBsZWZ0OwogICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDsKICAgIG1hcmdpbi1yaWdodDogMnB4OwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgouY29sb3JwaWNrZXItcGlja2VyLWluZm97CiAgICBwYWRkaW5nOiAwIDAgMnB4OwogICAgY29sb3I6ICNmZmY7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwp9CgouY29sb3JwaWNrZXItcGlja2VyLXNwYW46aG92ZXIgewogICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjsKfQoKLmNvbG9ycGlja2VyLXBpY2tlci1zcGFuLmFjdGl2ZSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmOwp9CgouY29sb3JwaWNrZXItcGlja2VyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICMzNTM1MzQ7CiAgICBwYWRkaW5nOiA1cHg7CiAgICBkaXNwbGF5OiBub25lOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiAwOwogICAgLW1vei1ib3JkZXItcmFkaXVzOiA1cHg7CiAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICBib3gtc2hhZG93OiAycHggMnB4IDVweCAjMTExOwogICAgLW1vei1ib3gtc2hhZG93OiAycHggMnB4IDVweCAjMTExOwogICAgLXdlYmtpdC1ib3gtc2hhZG93OiAycHggMnB4IDVweCAjMTExOwp9CgouY29sb3JwaWNrZXItdHJpZ2dlciB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHdpZHRoOiAxNXB4OwogICAgaGVpZ2h0OiAxNXB4OwogICAgZmxvYXQ6IGxlZnQ7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgYmFja2dyb3VuZC1jb2xvcjogIzgwODA4MDs7Cn0KCgouY29sb3JwaWNrZXItd3JhcCB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICB0b3A6IDJweDsKfQoKLmNvbG9ycGlja2VyLWxhYmVsIHsKICAgIGZsb2F0OiBsZWZ0OwogICAgbWFyZ2luLXJpZ2h0OiAycHg7Cn0="/>');
	$('#picker').colorpicker({
		size: 20,
		label: '    ',
		hide: true
	});
});
// ]]></script>
<select id="picker">
<option value="FFFFFF">FFFFFF</option>
<option value="FFDFDF">FFDFDF</option>
<option value="FFBFBF">FFBFBF</option>
<option value="FF9F9F">FF9F9F</option>
<option value="FF7F7F">FF7F7F</option>
<option value="FF5F5F">FF5F5F</option>
<option value="FF3F3F">FF3F3F</option>
<option value="FF1F1F">FF1F1F</option>
<option value="FF0000">FF0000</option>
<option value="DF1F00">DF1F00</option>
<option value="C33B00">C33B00</option>
<option value="A75700">A75700</option>
<option value="8B7300">8B7300</option>
<option value="6F8F00">6F8F00</option>
<option value="53AB00">53AB00</option>
<option value="37C700">37C700</option>
<option value="1BE300">1BE300</option>
<option selected="selected" value="33ff33">33ff33</option>
<option value="00DF1F">00DF1F</option>
<option value="00C33B">00C33B</option>
<option value="00A757">00A757</option>
<option value="008B73">008B73</option>
<option value="006F8F">006F8F</option>
<option value="0053AB">0053AB</option>
<option value="0037C7">0037C7</option>
<option value="001BE3">001BE3</option>
<option value="0000FF">0000FF</option>
<option value="0000df">0000df</option>
<option value="0000c3">0000c3</option>
<option value="0000a7">0000a7</option>
<option value="00008b">00008b</option>
<option value="00006f">00006f</option>
<option value="000053">000053</option>
<option value="000037">000037</option>
<option value="00001b">00001b</option>
<option value="000000">000000</option>
</select>&nbsp; <label title="只会显示手势命令对应的代码"><input id="doNotGenerate" onclick="MouseGestures.doNotGenerate()" type="checkbox" />代码片段</label>
<script type="text/javascript">// <![CDATA[
!window.netscape &&($("#gesturesChain").closest(".postCon").length ? $("#gesturesChain").closest(".postCon") : $("#gesturesChain").closest(".postBody")).html('<b style="color:black;line-height:1em;font-size: 100px;">FIREFOX ONLY</b>').css({
			"padding": "50px"
		})
// ]]></script>
<script type="text/javascript" src="http://files.cnblogs.com/ziyunfei/js_beautify.js
<view-source:http://files.cnblogs.com/ziyunfei/js_beautify.js>"></script>
<script type="text/javascript">// <![CDATA[
MouseGestures = {
		template: "bG9jYXRpb24gPT0gImNocm9tZTovL2Jyb3dzZXIvY29udGVudC9icm93c2VyLnh1bCIgJiYgKGZ1bmN0aW9uICgpIHsKCXVjanNNb3VzZUdlc3R1cmVzID0gewoJCWxhc3RYOiAwLAoJCWxhc3RZOiAwLAoJCXNvdXJjZU5vZGU6ICIiLAoJCWRpcmVjdGlvbkNoYWluOiAiIiwKCQlpc01vdXNlRG93bkw6IGZhbHNlLAoJCWlzTW91c2VEb3duUjogZmFsc2UsCgkJaGlkZUZpcmVDb250ZXh0OiBmYWxzZSwKCQlzaG91bGRGaXJlQ29udGV4dDogZmFsc2UsCgkJR0VTVFVSRVM6IHt9LAoJCWluaXQ6IGZ1bmN0aW9uICgpIHsKCQkJdmFyIHNlbGYgPSB0aGlzOwoJCQlbIm1vdXNlZG93biIsICJtb3VzZW1vdmUiLCAibW91c2V1cCIsICJjb250ZXh0bWVudSIsICJET01Nb3VzZVNjcm9sbCIsICJkcmFnZW5kIl0uZm9yRWFjaChmdW5jdGlvbiAodHlwZSkgewoJCQkJZ0Jyb3dzZXIubVBhbmVsQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgc2VsZiwgdHJ1ZSk7CgkJCX0pOwoJCQl3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigidW5sb2FkIiwgZnVuY3Rpb24gKCkgewoJCQkJWyJtb3VzZWRvd24iLCAibW91c2Vtb3ZlIiwgIm1vdXNldXAiLCAiY29udGV4dG1lbnUiLCAiRE9NTW91c2VTY3JvbGwiLCAiZHJhZ2VuZCJdLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHsKCQkJCQlnQnJvd3Nlci5tUGFuZWxDb250YWluZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBzZWxmLCB0cnVlKTsKCQkJCX0pOwoJCQl9LCBmYWxzZSk7CgkJfSwKCQloYW5kbGVFdmVudDogZnVuY3Rpb24gKGV2ZW50KSB7CgkJCXN3aXRjaCAoZXZlbnQudHlwZSkgewoJCQljYXNlICJtb3VzZWRvd24iOgoJCQkJaWYoL29iamVjdHxlbWJlZC9pLnRlc3QoZXZlbnQudGFyZ2V0LmxvY2FsTmFtZSkpIHJldHVybjsKCQkJCWlmIChldmVudC5idXR0b24gPT0gMikgewoJCQkJCXRoaXMuc291cmNlTm9kZSA9IGV2ZW50LnRhcmdldDsKCQkJCQl0aGlzLmlzTW91c2VEb3duUiA9IHRydWU7CgkJCQkJdGhpcy5oaWRlRmlyZUNvbnRleHQgPSBmYWxzZTsKCQkJCQlbdGhpcy5sYXN0WCwgdGhpcy5sYXN0WSwgdGhpcy5kaXJlY3Rpb25DaGFpbl0gPSBbZXZlbnQuc2NyZWVuWCwgZXZlbnQuc2NyZWVuWSwgIiJdOwoJCQkJfQoJCQkJaWYgKGV2ZW50LmJ1dHRvbiA9PSAyICYmIHRoaXMuaXNNb3VzZURvd25MKSB7CgkJCQkJdGhpcy5pc01vdXNlRG93blIgPSBmYWxzZTsKCQkJCQl0aGlzLnNob3VsZEZpcmVDb250ZXh0ID0gZmFsc2U7CgkJCQkJdGhpcy5oaWRlRmlyZUNvbnRleHQgPSB0cnVlOwoJCQkJCXRoaXMuZGlyZWN0aW9uQ2hhaW4gPSAiTD5SIjsKCQkJCQl0aGlzLnN0b3BHZXN0dXJlKGV2ZW50KTsKCQkJCX0gZWxzZSBpZiAoZXZlbnQuYnV0dG9uID09IDApIHsKCQkJCQl0aGlzLmlzTW91c2VEb3duTCA9IHRydWU7CgkJCQkJaWYgKHRoaXMuaXNNb3VzZURvd25SKSB7CgkJCQkJCXRoaXMuaXNNb3VzZURvd25MID0gZmFsc2U7CgkJCQkJCXRoaXMuc2hvdWxkRmlyZUNvbnRleHQgPSBmYWxzZTsKCQkJCQkJdGhpcy5oaWRlRmlyZUNvbnRleHQgPSB0cnVlOwoJCQkJCQl0aGlzLmRpcmVjdGlvbkNoYWluID0gIkw8UiI7CgkJCQkJCXRoaXMuc3RvcEdlc3R1cmUoZXZlbnQpOwoJCQkJCX0KCQkJCX0KCQkJCWJyZWFrOwoJCQljYXNlICJtb3VzZW1vdmUiOgoJCQkJaWYgKHRoaXMuaXNNb3VzZURvd25SKSB7CgkJCQkJdGhpcy5oaWRlRmlyZUNvbnRleHQgPSB0cnVlOwoJCQkJCXZhciBbc3ViWCwgc3ViWV0gPSBbZXZlbnQuc2NyZWVuWCAtIHRoaXMubGFzdFgsIGV2ZW50LnNjcmVlblkgLSB0aGlzLmxhc3RZXTsKCQkJCQl2YXIgW2Rpc3RYLCBkaXN0WV0gPSBbKHN1YlggPiAwID8gc3ViWCA6ICgtc3ViWCkpLCAoc3ViWSA+IDAgPyBzdWJZIDogKC1zdWJZKSldOwoJCQkJCXZhciBkaXJlY3Rpb247CgkJCQkJaWYgKGRpc3RYIDwgMTAgJiYgZGlzdFkgPCAxMCkgcmV0dXJuOwoJCQkJCWlmIChkaXN0WCA+IGRpc3RZKSBkaXJlY3Rpb24gPSBzdWJYIDwgMCA/ICJMIiA6ICJSIjsKCQkJCQllbHNlIGRpcmVjdGlvbiA9IHN1YlkgPCAwID8gIlUiIDogIkQiOwoJCQkJCWlmIChkaXJlY3Rpb24gIT0gdGhpcy5kaXJlY3Rpb25DaGFpbi5jaGFyQXQodGhpcy5kaXJlY3Rpb25DaGFpbi5sZW5ndGggLSAxKSkgewoJCQkJCQl0aGlzLmRpcmVjdGlvbkNoYWluICs9IGRpcmVjdGlvbjsKCQkJCQkJWFVMQnJvd3NlcldpbmRvdy5zdGF0dXNUZXh0RmllbGQubGFiZWwgPSB0aGlzLkdFU1RVUkVTW3RoaXMuZGlyZWN0aW9uQ2hhaW5dID8gIuaJi+WKvzogIiArIHRoaXMuZGlyZWN0aW9uQ2hhaW4gKyAiICIgKyB0aGlzLkdFU1RVUkVTW3RoaXMuZGlyZWN0aW9uQ2hhaW5dLm5hbWUgOiAi5pyq55+l5omL5Yq/OiIgKyB0aGlzLmRpcmVjdGlvbkNoYWluOwoJCQkJCX0KCQkJCQl0aGlzLmxhc3RYID0gZXZlbnQuc2NyZWVuWDsKCQkJCQl0aGlzLmxhc3RZID0gZXZlbnQuc2NyZWVuWTsKCQkJCX0KCQkJCWJyZWFrOwoJCQljYXNlICJtb3VzZXVwIjoKCQkJCWlmIChldmVudC5jdHJsS2V5ICYmIGV2ZW50LmJ1dHRvbiA9PSAyKSB7CgkJCQkJdGhpcy5pc01vdXNlRG93bkwgPSBmYWxzZTsKCQkJCQl0aGlzLmlzTW91c2VEb3duUiA9IGZhbHNlOwoJCQkJCXRoaXMuc2hvdWxkRmlyZUNvbnRleHQgPSBmYWxzZTsKCQkJCQl0aGlzLmhpZGVGaXJlQ29udGV4dCA9IGZhbHNlOwoJCQkJCXRoaXMuZGlyZWN0aW9uQ2hhaW4gPSAiIjsKCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJCVhVTEJyb3dzZXJXaW5kb3cuc3RhdHVzVGV4dEZpZWxkLmxhYmVsID0gIuWPlua2iOaJi+WKvyI7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCQlpZiAodGhpcy5pc01vdXNlRG93blIgJiYgZXZlbnQuYnV0dG9uID09IDIpIHsKCQkJCQlpZiAodGhpcy5kaXJlY3Rpb25DaGFpbikgdGhpcy5zaG91bGRGaXJlQ29udGV4dCA9IGZhbHNlOwoJCQkJCXRoaXMuaXNNb3VzZURvd25SID0gZmFsc2U7CgkJCQkJdGhpcy5kaXJlY3Rpb25DaGFpbiAmJiB0aGlzLnN0b3BHZXN0dXJlKGV2ZW50KTsKCQkJCX0gZWxzZSBpZiAoZXZlbnQuYnV0dG9uID09IDAgJiYgdGhpcy5pc01vdXNlRG93bkwpIHsKCQkJCQl0aGlzLmlzTW91c2VEb3duTCA9IGZhbHNlOwoJCQkJCXRoaXMuc2hvdWxkRmlyZUNvbnRleHQgPSBmYWxzZTsKCQkJCX0KCQkJCWJyZWFrOwoJCQljYXNlICJjb250ZXh0bWVudSI6CgkJCQlpZiAodGhpcy5pc01vdXNlRG93bkwgfHwgdGhpcy5pc01vdXNlRG93blIgfHwgdGhpcy5oaWRlRmlyZUNvbnRleHQpIHsKCQkJCQl2YXIgcHJlZiA9IENvbXBvbmVudHMuY2xhc3Nlc1siQG1vemlsbGEub3JnL3ByZWZlcmVuY2VzLXNlcnZpY2U7MSJdLmdldFNlcnZpY2UoQ29tcG9uZW50cy5pbnRlcmZhY2VzLm5zSVByZWZTZXJ2aWNlKTsKCQkJCQl2YXIgY29udGV4dG1lbnUgPSBwcmVmLmdldEJvb2xQcmVmKCJkb20uZXZlbnQuY29udGV4dG1lbnUuZW5hYmxlZCIpOwoJCQkJCXByZWYuc2V0Qm9vbFByZWYoImRvbS5ldmVudC5jb250ZXh0bWVudS5lbmFibGVkIiwgdHJ1ZSk7CgkJCQkJc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CgkJCQkJCXByZWYuc2V0Qm9vbFByZWYoImRvbS5ldmVudC5jb250ZXh0bWVudS5lbmFibGVkIiwgY29udGV4dG1lbnUpOwoJCQkJCX0sIDEwKTsKCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJCWV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwoJCQkJCXRoaXMuc2hvdWxkRmlyZUNvbnRleHQgPSB0cnVlOwoJCQkJCXRoaXMuaGlkZUZpcmVDb250ZXh0ID0gZmFsc2U7CgkJCQl9CgkJCQlicmVhazsKCQkJY2FzZSAiRE9NTW91c2VTY3JvbGwiOgoJCQkJaWYgKHRoaXMuaXNNb3VzZURvd25SKSB7CgkJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJCQlldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKCQkJCQl0aGlzLnNob3VsZEZpcmVDb250ZXh0ID0gZmFsc2U7CgkJCQkJdGhpcy5oaWRlRmlyZUNvbnRleHQgPSB0cnVlOwoJCQkJCXRoaXMuZGlyZWN0aW9uQ2hhaW4gPSAiVyIgKyAoZXZlbnQuZGV0YWlsID4gMCA/ICIrIiA6ICItIik7CgkJCQkJdGhpcy5zdG9wR2VzdHVyZShldmVudCk7CgkJCQl9CgkJCQlicmVhazsKCQkJY2FzZSAiZHJhZ2VuZCI6CgkJCQl0aGlzLmlzTW91c2VEb3duTCA9IGZhbHNlOwoJCQl9CgkJfSwKCQlzdG9wR2VzdHVyZTogZnVuY3Rpb24gKGV2ZW50KSB7CgkJCSh0aGlzLkdFU1RVUkVTW3RoaXMuZGlyZWN0aW9uQ2hhaW5dID8gdGhpcy5HRVNUVVJFU1t0aGlzLmRpcmVjdGlvbkNoYWluXS5jbWQodGhpcywgZXZlbnQpICYgKFhVTEJyb3dzZXJXaW5kb3cuc3RhdHVzVGV4dEZpZWxkLmxhYmVsID0gIiIpIDogKFhVTEJyb3dzZXJXaW5kb3cuc3RhdHVzVGV4dEZpZWxkLmxhYmVsID0gIuacquefpeaJi+WKvzoiICsgdGhpcy5kaXJlY3Rpb25DaGFpbikpICYgKHRoaXMuZGlyZWN0aW9uQ2hhaW4gPSAiIik7CgkJfQoJfTsKCXVjanNNb3VzZUdlc3R1cmVzLmluaXQoKQp9KSgp",
		install_rdf:"PD94bWwgdmVyc2lvbj0iMS4wIj8+CjxSREYgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiIHhtbG5zOmVtPSJodHRwOi8vd3d3Lm1vemlsbGEub3JnLzIwMDQvZW0tcmRmIyI+Cgk8RGVzY3JpcHRpb24gYWJvdXQ9InVybjptb3ppbGxhOmluc3RhbGwtbWFuaWZlc3QiPgoJCTxlbTppZD5Nb3VzZUdlc3R1cmVzQHppeXVuZmVpPC9lbTppZD4KCQk8ZW06dmVyc2lvbj4xLjA8L2VtOnZlcnNpb24+CgkJPGVtOnRhcmdldEFwcGxpY2F0aW9uPgoJCQk8RGVzY3JpcHRpb24+CgkJCQk8ZW06aWQ+e2VjODAzMGY3LWMyMGEtNDY0Zi05YjBlLTEzYTNhOWU5NzM4NH08L2VtOmlkPgoJCQkJPGVtOm1pblZlcnNpb24+MS4wPC9lbTptaW5WZXJzaW9uPgoJCQkJPGVtOm1heFZlcnNpb24+MTAuKjwvZW06bWF4VmVyc2lvbj4KCQkJPC9EZXNjcmlwdGlvbj4KCQk8L2VtOnRhcmdldEFwcGxpY2F0aW9uPgoJCTxlbTpuYW1lPk1vdXNlR2VzdHVyZXM8L2VtOm5hbWU+CgkJPGVtOmRlc2NyaXB0aW9uPk1vdXNlR2VzdHVyZXM8L2VtOmRlc2NyaXB0aW9uPgoJCTxlbTpjcmVhdG9yPue0q+S6kemjnjwvZW06Y3JlYXRvcj4KCTwvRGVzY3JpcHRpb24+CjwvUkRGPg==",
		chrome_manifest:"Y29udGVudCBNb3VzZUdlc3R1cmVzIC4vCm92ZXJsYXkgY2hyb21lOi8vYnJvd3Nlci9jb250ZW50L2Jyb3dzZXIueHVsIGNocm9tZTovL01vdXNlR2VzdHVyZXMvY29udGVudC9vdmVybGF5Lnh1bA==",
		overlay_xul:"PD94bWwgdmVyc2lvbj0iMS4wIj8+CjxvdmVybGF5IHhtbG5zPSJodHRwOi8vd3d3Lm1vemlsbGEub3JnL2tleW1hc3Rlci9nYXRla2VlcGVyL3RoZXJlLmlzLm9ubHkueHVsIj4KCTxzY3JpcHQ+CgkJPCFbQ0RBVEFbIAp3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsZnVuY3Rpb24oKXsKLy8vCn0sZmFsc2UpCgkJXV0+Cgk8L3NjcmlwdD4KPC9vdmVybGF5Pg==",
		line:"CQkJCQlpZighIX5jb250ZW50LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC50b1N0cmluZygpLmluZGV4T2YoIkhUTUwiKSl7CgkJCQkJCXZhciBkb2NmcmFnID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpOwoJCQkJCQljb250ZW50LnhkVHJhaWxBcmVhID0gY29udGVudC54ZFRyYWlsQXJlYSB8fCBjb250ZW50LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCAieGRUcmFpbEFyZWEiKSk7CgkJCQkJCWlmIChkaXJlY3Rpb24gPT0gIlIiKSB7CgkJCQkJCQlmb3IgKHZhciBpID0gdGhpcy5sYXN0WCwgaiA9IHRoaXMubGFzdFk7IGkgPD0gZXZlbnQuc2NyZWVuWDsgaSArPSAyKQoJCQkJCQkJZG9jZnJhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCAieGRUcmFpbERvdCIpKS5zdHlsZS5jc3NUZXh0ID0gIndpZHRoOjJweDsgaGVpZ2h0OjJweDsgYmFja2dyb3VuZDogbm9uZSByZXBlYXQgc2Nyb2xsIDAlIDAlICMzM2ZmMzM7IGJvcmRlcjogMHB4IG5vbmU7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjE0NzQ4MzY0NzsgbGVmdDoiICsgKGNvbnRlbnQucGFnZVhPZmZzZXQgKyBpIC0gY29udGVudC5tb3pJbm5lclNjcmVlblgpICsgInB4O3RvcDoiICsgKGNvbnRlbnQucGFnZVlPZmZzZXQgKyAoc3ViWSA8IDAgPyAoaiAtPSAyICogTWF0aC5hYnMoc3ViWSAvIHN1YlgpKSA6IChqICs9IDIgKiBNYXRoLmFicyhzdWJZIC8gc3ViWCkpKSAtIGNvbnRlbnQubW96SW5uZXJTY3JlZW5ZKSArICJweDsiOwoJCQkJCQl9CgkJCQkJCWlmIChkaXJlY3Rpb24gPT0gIkwiKSB7CgkJCQkJCQlmb3IgKHZhciBpID0gdGhpcy5sYXN0WCwgaiA9IHRoaXMubGFzdFk7IGkgPj0gZXZlbnQuc2NyZWVuWDsgaSAtPSAyKQoJCQkJCQkJZG9jZnJhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCAieGRUcmFpbERvdCIpKS5zdHlsZS5jc3NUZXh0ID0gIndpZHRoOjJweDsgaGVpZ2h0OjJweDsgYmFja2dyb3VuZDogbm9uZSByZXBlYXQgc2Nyb2xsIDAlIDAlICMzM2ZmMzM7IGJvcmRlcjogMHB4IG5vbmU7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjE0NzQ4MzY0NzsgbGVmdDoiICsgKGNvbnRlbnQucGFnZVhPZmZzZXQgKyBpIC0gY29udGVudC5tb3pJbm5lclNjcmVlblgpICsgInB4O3RvcDoiICsgKGNvbnRlbnQucGFnZVlPZmZzZXQgKyAoc3ViWSA8IDAgPyAoaiAtPSAyICogTWF0aC5hYnMoc3ViWSAvIHN1YlgpKSA6IChqICs9IDIgKiBNYXRoLmFicyhzdWJZIC8gc3ViWCkpKSAtIGNvbnRlbnQubW96SW5uZXJTY3JlZW5ZKSArICJweDsiOwoJCQkJCQl9CgkJCQkJCWlmIChkaXJlY3Rpb24gPT0gIlUiKSB7CgkJCQkJCQlmb3IgKHZhciBpID0gdGhpcy5sYXN0WSwgaiA9IHRoaXMubGFzdFg7IGkgPj0gZXZlbnQuc2NyZWVuWTsgaSAtPSAyKQoJCQkJCQkJZG9jZnJhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCAieGRUcmFpbERvdCIpKS5zdHlsZS5jc3NUZXh0ID0gIndpZHRoOjJweDsgaGVpZ2h0OjJweDsgYmFja2dyb3VuZDogbm9uZSByZXBlYXQgc2Nyb2xsIDAlIDAlICMzM2ZmMzM7IGJvcmRlcjogMHB4IG5vbmU7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjE0NzQ4MzY0NzsgbGVmdDoiICsgKGNvbnRlbnQucGFnZVhPZmZzZXQgKyAoc3ViWCA8IDAgPyAoaiAtPSAyICogTWF0aC5hYnMoc3ViWCAvIHN1YlkpKSA6IChqICs9IDIgKiBNYXRoLmFicyhzdWJYIC8gc3ViWSkpKSAtIGNvbnRlbnQubW96SW5uZXJTY3JlZW5YKSArICJweDt0b3A6IiArIChjb250ZW50LnBhZ2VZT2Zmc2V0ICsgaSAtIGNvbnRlbnQubW96SW5uZXJTY3JlZW5ZKSArICJweDsiOwoJCQkJCQl9CgkJCQkJCWlmIChkaXJlY3Rpb24gPT0gIkQiKSB7CgkJCQkJCQlmb3IgKHZhciBpID0gdGhpcy5sYXN0WSwgaiA9IHRoaXMubGFzdFg7IGkgPD0gZXZlbnQuc2NyZWVuWTsgaSArPSAyKQoJCQkJCQkJZG9jZnJhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCAieGRUcmFpbERvdCIpKS5zdHlsZS5jc3NUZXh0ID0gIndpZHRoOjJweDsgaGVpZ2h0OjJweDsgYmFja2dyb3VuZDogbm9uZSByZXBlYXQgc2Nyb2xsIDAlIDAlICMzM2ZmMzM7IGJvcmRlcjogMHB4IG5vbmU7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjE0NzQ4MzY0NzsgbGVmdDoiICsgKGNvbnRlbnQucGFnZVhPZmZzZXQgKyAoc3ViWCA8IDAgPyAoaiAtPSAyICogTWF0aC5hYnMoc3ViWCAvIHN1YlkpKSA6IChqICs9IDIgKiBNYXRoLmFicyhzdWJYIC8gc3ViWSkpKSAtIGNvbnRlbnQubW96SW5uZXJTY3JlZW5YKSArICJweDt0b3A6IiArIChjb250ZW50LnBhZ2VZT2Zmc2V0ICsgaSAtIGNvbnRlbnQubW96SW5uZXJTY3JlZW5ZKSArICJweDsiOwoJCQkJCQl9CgkJCQkJCWNvbnRlbnQueGRUcmFpbEFyZWEuYXBwZW5kQ2hpbGQoZG9jZnJhZyk7CgkJCQkJfQoJCQkJCQ==",
		selectedgesturesChain: [],
		openChrome:function(){
			try{
				netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
				Components.classes["@mozilla.org/file/directory_service;1"].getService(Components.interfaces.nsIProperties).get("UChrm", Components.interfaces.nsILocalFile).reveal();
			}catch(e){
				alert("about:config中signed.applets.codebase_principal_support禁止了该行为");
			}
		},
		doNotGenerate:function(){
			if($("#doNotGenerate:checked").length){
				$("#escapeunicode").parent().hide();
				$(".colorpicker-wrap").css("display","none");
				$("#showline").parent().hide();
				$("#deleteScript").hide();
				$("#generateScript").hide();
				$("#gesturesChain").parent().hide();
				$("#showComment").parent().hide();
				if($("#gesturesCommand").val()){
					$("#MouseGesturesScript").val(js_beautify(MouseGestures[$("#gesturesCommand").val()].cmd.toString().replace(/^function.+\n|\n.$/g,"").replace(/^\s\s\s\s/mg,"")));
					$("#MouseGesturesScriptLineNum").text("行数:" + (($("#MouseGesturesScript").val().match(/\n/g)||"").length + 1));
				}
			}
			else{
				$("#escapeunicode").parent().show();
				$(".colorpicker-wrap").css("display","inline-block");
				$("#showline").parent().show();
				$("#deleteScript").show();
				$("#generateScript").show();
				$("#gesturesChain").parent().show();
				$("#showComment").parent().show();
			}
		},
		onChange:function(){
			if(this.selectedgesturesChain[$("#gesturesChain").val()]){
				$("#deleteScript").attr("disabled",false);
				[i for(i in $("#gesturesCommand")[0].options) if($("#gesturesCommand")[0].options[i].textContent==MouseGestures.selectedgesturesChain[$("#gesturesChain").val()].match(/name:"(.+)"/)[1])][0].selected=1;
			}else{
				$("#deleteScript").attr("disabled",true);
				if(!!~$("#gesturesCommand")[0].selectedIndex&&$("#gesturesCommand")[0].options[$("#gesturesCommand")[0].selectedIndex].disabled){
					$("#gesturesCommand")[0].selectedIndex=-1;
				}
			}
		},
		makeXPI: function () {
			try{
				netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
			}catch(e){
				alert("about:config中 signed.applets.codebase_principal_support 禁止了该行为");
				return;
			}
			var zipW = new Components.Constructor("@mozilla.org/zipwriter;1", "nsIZipWriter")();
			var file = Components.classes["@mozilla.org/file/directory_service;1"].getService(Components.interfaces.nsIProperties).get("DeskP", Components.interfaces.nsILocalFile);
			file.append("MouseGestures.xpi");
			zipW.open(file, 44);
			var converter = Components.classes["@mozilla.org/intl/scriptableunicodeconverter"].createInstance(Components.interfaces.nsIScriptableUnicodeConverter);
			converter.charset = "UTF-8";
			zipW.addEntryStream("install.rdf", Components.interfaces.nsIZipWriter.COMPRESSION_DEFAULT, null, converter.convertToInputStream(decodeURIComponent(escape(atob(this.install_rdf)))), false);
			zipW.addEntryStream("chrome.manifest", Components.interfaces.nsIZipWriter.COMPRESSION_DEFAULT, null, converter.convertToInputStream(decodeURIComponent(escape(atob(this.chrome_manifest)))), false);
			zipW.addEntryStream("overlay.xul", Components.interfaces.nsIZipWriter.COMPRESSION_DEFAULT, null, converter.convertToInputStream(decodeURIComponent(escape(atob(this.overlay_xul))).replace(/\/\/\//g,$("#MouseGesturesScript").val())), false);
			zipW.close();
		},
		copyScript:function(){
			try{
				netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
				Components.classes['@mozilla.org/widget/clipboardhelper;1'].createInstance(Components.interfaces.nsIClipboardHelper).copyString($("#MouseGesturesScript").val());
			}catch(e){
				alert("about:config中signed.applets.codebase_principal_support禁止了该行为");
			}
		},
		runScript:function(){
			if(navigator.userAgent.match(/rv:(\d)/)[1]>1){
				alert("Firefox 4.0及其以上版本不允许网页操作自己的浏览器");
				return;
			}
			try{
				netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
			}catch(e){
				alert("about:config中signed.applets.codebase_principal_support禁止了该行为");
				return;
			}
			try{
				if((!$("#doNotGenerate:checked").length)&&!!~$("#MouseGesturesScript").val().indexOf("ucjsMouseGestures")){
					with(Components.classes["@mozilla.org/browser/browserglue;1"].getService(Components.interfaces.nsIBrowserGlue).getMostRecentBrowserWindow()){eval('["mousedown","mousemove","mouseup","contextmenu","DOMMouseScroll"].forEach(function(type){Components.classes["@mozilla.org/browser/browserglue;1"].getService(Components.interfaces.nsIBrowserGlue).getMostRecentBrowserWindow().gBrowser.mPanelContainer.removeEventListener(type,Components.classes["@mozilla.org/browser/browserglue;1"].getService(Components.interfaces.nsIBrowserGlue).getMostRecentBrowserWindow().ucjsMouseGestures ,type=="contextmenu")})')}
				}
				with(Components.classes["@mozilla.org/browser/browserglue;1"].getService(Components.interfaces.nsIBrowserGlue).getMostRecentBrowserWindow()){eval($("#MouseGesturesScript").val())}
			}catch(e){
				alert("该脚本无法正常运行");
			}
		},
		escape:function(){
			$("#MouseGesturesScript").val($("#escapeunicode:checked").length ? $("#MouseGesturesScript").val().split("\n").map(function (line) {
				return /^\s+\/\//.test(line) ? line : line.replace(/[^\u0000-\u00FF]/g, function ($0) {
					return "\\u" + $0.charCodeAt(0).toString(16);
				})
			}).join("\n") : $("#MouseGesturesScript").val());
		},
		generateScript: function (del,changeEscape) {
		if (!changeEscape) {
			$("#gesturesChain")[0].selectedIndex=$("#gesturesChain")[0].selectedIndex<0?0:$("#gesturesChain")[0].selectedIndex;
			if (del) {
				if(!MouseGestures.selectedgesturesChain[$("#gesturesChain").val()])
				return;
				var item = [i for(i in $("#gesturesCommand")[0].options) if($("#gesturesCommand")[0].options[i].textContent==MouseGestures.selectedgesturesChain[$("#gesturesChain").val()].match(/name:"(.+)"/)[1])][0];
				item.disabled=0;
				item.style.backgroundColor="";
				$("#deleteScript").attr("disabled",true);
				$("#gesturesChain")[0].options[$("#gesturesChain")[0].selectedIndex].style.backgroundColor="";
				this.selectedgesturesChain[$("#gesturesChain").val()] = '';
			} else {
				if($("#gesturesCommand").val()){
					if(this.selectedgesturesChain[$("#gesturesChain").val()]){
						var item = [i for(i in $("#gesturesCommand")[0].options) if($("#gesturesCommand")[0].options[i].textContent==MouseGestures.selectedgesturesChain[$("#gesturesChain").val()].match(/name:"(.+)"/)[1])][0];
						item.disabled=0;
						item.style.backgroundColor="";
					}
					this.selectedgesturesChain[$("#gesturesChain").val()] = '{\nname:"' + this[$("#gesturesCommand").val()].name + '",\ncmd:' + this[$("#gesturesCommand").val()].cmd + '\n},'
					$("#gesturesChain")[0].options[$("#gesturesChain")[0].selectedIndex].style.backgroundColor="pink";
					$("#gesturesCommand")[0].options[$("#gesturesCommand")[0].selectedIndex].style.backgroundColor="pink";
					$($("#gesturesCommand")[0].options[$("#gesturesCommand")[0].selectedIndex]).attr("disabled","true");
					$("#gesturesChain")[0].selectedIndex++;
					$("#gesturesCommand")[0].selectedIndex++;
					if(!!~$("#gesturesCommand")[0].selectedIndex&&$($("#gesturesCommand")[0].options[$("#gesturesCommand")[0].selectedIndex]).attr("disabled")){
						$("#gesturesCommand")[0].selectedIndex=-1;
					}
				}else{
					return;
				}
			}
		}
		$("#MouseGesturesScript").val((!$("#showline:checked").length?decodeURIComponent(escape(atob(this.template))):decodeURIComponent(escape(atob(this.template))).replace(/^\s+(?=if \(direction)/m,decodeURIComponent(escape(atob(this.line)))).replace(/case "mouseup":/,'case "mouseup":\n\t\t\t\tif(content.xdTrailArea) {\n\t\t\t\t\tcontent.xdTrailArea.parentNode.removeChild(content.xdTrailArea);\n\t\t\t\t\tcontent.xdTrailArea = content.document.documentElement.appendChild(document.createElementNS("http://www.w3.org/1999/xhtml", "xdTrailArea"));\n\t\t\t\t}').replace(/33ff33/g,$("#picker").val())).replace("{},", js_beautify("{" + [($("#showComment:checked").length?('\n//' + this.selectedgesturesChain[i].match(/name:"(.+)"/)[1]):"") +'\n"' + i + '":' + this.selectedgesturesChain[i] for (i in this.selectedgesturesChain) if (this.selectedgesturesChain[i])].join("") + "},").replace(/^/mg, "\t\t").replace(/^\s+{/, "{")))
		MouseGestures.escape();
		$("#MouseGesturesScriptLineNum").text("行数:" + (($("#MouseGesturesScript").val().match(/\n/g)||"").length + 1));
		},
		BrowserOpenTab: {
			name: "打开新标签",
			cmd: function () {
				BrowserOpenTab();
			}
		},
		BrowserHome: {
			name: "打开主页",
			cmd: function () {
				BrowserHome();
			}
		},
		newTabOpenLink: {
			name: "新标签打开链接(前台)",
			cmd: function (self) {
				gBrowser.selectedTab = gBrowser.addTab(self.sourceNode.href || self.sourceNode.parentNode.href);
			}
		},
		newTabOpenLinkBG: {
			name: "新标签打开链接(后台)",
			cmd: function (self) {
				gBrowser.addTab(self.sourceNode.href || self.sourceNode.parentNode.href);
			}
		},
		newTabOpenURL: {
			name: "新标签打开指定网址(前台)",
			cmd: function () {
				gBrowser.selectedTab = gBrowser.addTab("www.abc.com");
			}
		},
		newTabOpenURLBG: {
			name: "新标签打开指定网址(后台)",
			cmd: function () {
				gBrowser.addTab("www.abc.com");
			}
		},
		removeCurrentTab: {
			name: "关闭当前标签",
			cmd: function () {
				gBrowser.removeCurrentTab();
			}
		},
		closePrevTab: {
			name: "关闭左边的标签页",
			cmd: function () {
				gBrowser.visibleTabs.indexOf(gBrowser.mCurrentTab) == 0 || gBrowser.removeTab(gBrowser.visibleTabs[gBrowser.visibleTabs.indexOf(gBrowser.mCurrentTab) - 1]);
			}
		},
		closeNextTab: {
			name: "关闭右边的标签页",
			cmd: function () {
				gBrowser.visibleTabs.indexOf(gBrowser.mCurrentTab) + 1 < gBrowser.visibleTabs.length && gBrowser.removeTab(gBrowser.visibleTabs[gBrowser.visibleTabs.indexOf(gBrowser.mCurrentTab) + 1]);
			}
		},
		removeAllTabsBut: {
			name: "关闭其他标签页",
			cmd: function () {
				gBrowser.removeAllTabsBut(gBrowser.mCurrentTab);
			}
		},
		removeAllTabViewsTabsBut: {
			name: "关闭其他标签页(包括其他标签页组)",
			cmd: function () {
				Array.filter(gBrowser.mTabs, function (tab) {
					return tab != gBrowser.mCurrentTab;
				}).forEach(function (tab) {
					gBrowser.removeTab(tab);
				})
			}
		},
		removeAllTabs: {
			name: "关闭所有标签页",
			cmd: function () {
				gBrowser.removeAllTabsBut(gBrowser.mCurrentTab);
				gBrowser.removeCurrentTab();
			}
		},
		removeAllTabViewsTabs: {
			name: "关闭所有标签页(包括其他标签页组)",
			cmd: function () {
				while (gBrowser.mTabs.length > 1)
				gBrowser.removeTab(gBrowser.mTabs[0]);
				gBrowser.removeCurrentTab();
			}
		},
		undoCloseTab: {
			name: "恢复关闭的标签页",
			cmd: function () {
				undoCloseTab();
			}
		},
		PrevTab: {
			name: "激活左边的标签页",
			cmd: function () {
				gBrowser.tabContainer.advanceSelectedTab(-1, true);
			}
		},
		PrevTabViewTab: {
			name: "激活左边的标签页(包括其他标签页组)",
			cmd: function () {
				Array.forEach(gBrowser.mTabs, function (tab) {
					tab.removeAttribute("hidden");
				})
				gBrowser.tabContainer.advanceSelectedTab(-1, true);
				Array.forEach(gBrowser.mTabs, function (tab) {
					tab.removeAttribute("hidden");
				})
			}
		},
		NextTab: {
			name: "激活右边的标签页",
			cmd: function () {
				gBrowser.tabContainer.advanceSelectedTab(1, true);
			}
		},
		NextTabViewTab: {
			name: "激活右边的标签页(包括其他标签页组)",
			cmd: function () {
				Array.forEach(gBrowser.mTabs, function (tab) {
					tab.removeAttribute("hidden");
				})
				gBrowser.tabContainer.advanceSelectedTab(1, true);
				Array.forEach(gBrowser.mTabs, function (tab) {
					tab.removeAttribute("hidden");
				})
			}
		},
		firstTab: {
			name: "激活第一个标签",
			cmd: function () {
				gBrowser.selectedTab=(gBrowser.visibleTabs||gBrowser.mTabs)[0];
			}
		},
		lastTab: {
			name: "激活最后一个标签",
			cmd: function () {
				gBrowser.selectedTab=(gBrowser.visibleTabs||gBrowser.mTabs)[(gBrowser.visibleTabs||gBrowser.mTabs).length-1];
			}
		},
		reloadTab: {
			name: "刷新当前页面",
			cmd: function () {
				gBrowser.mCurrentBrowser.reload();
			}
		},
		skipCacheReloadTab: {
			name: "跳过缓存刷新当前页面",
			cmd: function () {
				BrowserReloadSkipCache();
			}
		},
		reloadAllTabsBut: {
			name: "刷新其他所有页面",
			cmd: function () {
				Array.forEach(gBrowser.visibleTabs, function (tab) {
					tab == gBrowser.mCurrentBrowser || tab.linkedBrowser.reload();
				})
			}
		},
		reloadAllTabViewsTabsBut: {
			name: "刷新其他所有页面(包括其他标签页组)",
			cmd: function () {
				Array.forEach(gBrowser.mTabs, function (tab) {
					tab == gBrowser.mCurrentBrowser || tab.linkedBrowser.reload();
				})
			}
		},
		reloadAllTabs: {
			name: "刷新所有页面",
			cmd: function () {
				gBrowser.reloadAllTabs();
			}
		},
		reloadAllTabViewsTabs: {
			name: "刷新所有页面(包括其他标签页组)",
			cmd: function () {
				Array.forEach(gBrowser.mTabs, function (tab) {
					tab.linkedBrowser.reload();
				})
			}
		},
		BrowserStop: {
			name: "停止载入当前页",
			cmd: function () {
				BrowserStop();
			}
		},
		BrowserStopAll: {
			name: "停止载入所有页",
			cmd: function () {
				Array.map(gBrowser.browsers,function(browser){browser.stop()});
			}
		},
		BrowserBack: {
			name: "后退",
			cmd: function () {
				getWebNavigation().canGoBack&&getWebNavigation().goBack();
			}
		},
		quickBack: {
			name: "后退到最后",
			cmd: function () {
				getWebNavigation().gotoIndex(0);
			}
		},
		BrowserForward: {
			name: "前进",
			cmd: function () {
				getWebNavigation().canGoForward&&getWebNavigation().goForward();
			}
		},
		quickForward: {
			name: "前进到最前",
			cmd: function () {
				getWebNavigation().gotoIndex(getWebNavigation().sessionHistory.count-1);
			}
		},
		scrollTop: {
			name: "转到页首",
			cmd: function () {
				goDoCommand("cmd_scrollTop");
			}
		},
		scrollTop2: {
			name: "转到页首(强制)",
			cmd: function () {
				content.scrollTo(0,0);
			}
		},
		scrollBottom: {
			name: "转到页尾",
			cmd: function () {
				goDoCommand("cmd_scrollBottom");
			}
		},
		scrollBottom2: {
			name: "转到页尾(强制)",
			cmd: function () {
				content.scrollTo(0,1e10);
			}
		},
		scrollByPagesDown:{
			name: "向下滚动一屏",
			cmd: function () {
				content.scrollByPages(1);
			}
		},
		scrollByPagesUp:{
			name: "向上滚动一屏",
			cmd: function () {
				content.scrollByPages(-1);
			}
		},
		doSelectAll: {
			name: "全选",
			cmd: function () {
				goDoCommand("cmd_selectAll");
			}
		},
		doSelectAllAndCopy: {
			name: "复制页面全部文字",
			cmd: function () {
				Components.classes['@mozilla.org/widget/clipboardhelper;1'].getService(Components.interfaces.nsIClipboardHelper).copyString(content.document.documentElement.textContent);
			}
		},
		copySelect: {
			name: "复制选中文字",
			cmd: function () {
				Components.classes['@mozilla.org/widget/clipboardhelper;1'].getService(Components.interfaces.nsIClipboardHelper).copyString(content.getSelection());
			}
		},
		BrowserSearch: {
			name: "搜索框搜索选中文字",
			cmd: function () {
				BrowserSearch.loadSearch(getBrowserSelection(), true);
			}
		},
		baiduSearch: {
			name: "baidu搜索选中文字",
			cmd: function () {
				gBrowser.selectedTab=gBrowser.addTab('http://www.baidu.com/s?wd='+getBrowserSelection());
			}
		},
		googleSearch: {
			name: "google搜索选中文字",
			cmd: function () {
				gBrowser.selectedTab=gBrowser.addTab('http://www.google.com/search?q='+encodeURIComponent(getBrowserSelection()));
			}
		},
		saveSelect: {
			name: "保存选中文字",
			cmd: function () {
				saveImageURL('data:text/plain;charset=UTF-8;base64,' + btoa(unescape(encodeURIComponent(content.getSelection().toString()))), content.document.title + ".txt");
			}
		},
		openSelectLinks: {
			name: "打开选中链接",
			cmd: function () {
				Array.filter(content.document.links, function (link) {
					arguments.callee.uniq = arguments.callee.uniq || [];
					if ((!~arguments.callee.uniq.indexOf(link.toString())) && content.getSelection().containsNode(link, 1)) {
						arguments.callee.uniq.push(link.toString());
						return 1;
					}
				}).forEach(function (link) {
					gBrowser.addTab(link.toString());
				})
			}
		},
		copySelectLinks: {
			name: "复制选中链接",
			cmd: function () {
				Components.classes['@mozilla.org/widget/clipboardhelper;1'].getService(Components.interfaces.nsIClipboardHelper).copyString(Array.filter(content.document.links, function (link) {
					arguments.callee.uniq = arguments.callee.uniq || [];
					if ((!~arguments.callee.uniq.indexOf(link.toString())) && content.getSelection().containsNode(link, 1)) {
						arguments.callee.uniq.push(link.toString());
						return 1;
					}
				}).map(function (link) {
					return link.toString();
				}).join("\r\n"));
			}
		},
		saveSelectImg: {
			name: "下载选中图片",
			cmd: function () {
				Array.filter(content.document.images, function (image) {
					arguments.callee.uniq = arguments.callee.uniq || [];
					if ((!~arguments.callee.uniq.indexOf(image.src)) && content.getSelection().containsNode(image, 1)) {
						arguments.callee.uniq.push(image.src);
						return 1;
					}
				}).forEach(function (image) {
					saveImageURL(image.src,0,0,0,1);
				})
			}
		},
		deleteSelect: {
			name: "删除选中部分网页",
			cmd: function () {
				content.getSelection().deleteFromDocument(0);
			}
		},
		saveImage: {
			name: "保存图片",
			cmd: function (self) {
				if(self.sourceNode.src){
					saveImageURL(self.sourceNode.src);
				}
			}
		},
		copyImageURL: {
			name: "复制图片地址",
			cmd: function (self) {
				if(self.sourceNode.src){
					Components.classes['@mozilla.org/widget/clipboardhelper;1'].getService(Components.interfaces.nsIClipboardHelper).copyString(self.sourceNode.src);
				}
			}
		},
		openImageURL: {
			name: "新标签打开图片",
			cmd: function (self) {
				if(self.sourceNode.src){
					gBrowser.addTab(self.sourceNode.src);
				}
			}
		},
		searchImageAll: {
			name: "搜索相似图片",
			cmd: function (self) {
				if(self.sourceNode.src){
					gBrowser.addTab('http://www.tineye.com/search/?pluginver=firefox-1.0&sort=size&order=desc&url=' + encodeURIComponent(self.sourceNode.src));
					gBrowser.addTab('http://stu.baidu.com/i?rt=0&rn=10&ct=1&tn=baiduimage&objurl=' + encodeURIComponent(self.sourceNode.src));
					gBrowser.addTab('http://www.google.com/searchbyimage?image_url=' + encodeURIComponent(self.sourceNode.src));
					gBrowser.addTab('http://pic.sogou.com/ris?query=' + encodeURIComponent(self.sourceNode.src));
				}
			}
		},
		fanhuajian: {
			name: "繁化简",
			cmd: function () {
				content.document.documentElement.appendChild(content.document.createElement("script")).src = "http://tongwen.openfoundry.org/NewTongWen/tools/bookmarklet_cn2.js";
			}
		},
		jianhuafan: {
			name: "简化繁",
			cmd: function () {
				content.document.documentElement.appendChild(content.document.createElement("script")).src = "http://tongwen.openfoundry.org/NewTongWen/tools/bookmarklet_tw2.js";
			}
		},
		gbToUTF8: {
			name: "页面编码GB互转UTF8",
			cmd: function () {
				(gBrowser.mCurrentBrowser._docShell.documentCharsetInfo.forcedCharset=gBrowser.mCurrentBrowser._docShell.currentDocumentChannel.contentCharset=="utf-8"?"GB2312":"utf-8")&&gBrowser.mCurrentBrowser.reload();
			}
		},
		baseDir: {
			name: "网址向上一层",
			cmd: function () {
				loadURI(content.location.host+content.location.pathname.replace(/\/[^\/]+\/?$/,""));
			}
		},
		URLNumUp: {
			name: "URL中的数字递增",
			cmd: function () {
				loadURI(content.location.href.replace(/(\d+)(?=\D*$)/, function ($0) {
					return +$0 + 1
				}));
			}
		},
		URLNumDown: {
			name: "URL中的数字递减",
			cmd: function () {
				loadURI(content.location.href.replace(/(\d+)(?=\D*$)/, function ($0) {
					return +$0 - 1>0?+$0 - 1:0;
				}));
			}
		},
		aboutConfig : {
			name: "打开about:config",
			cmd: function () {
				gBrowser.selectedTab=gBrowser.addTab("about:config");
			}
		},
		openChromeDir: {
			name: "打开Chrome目录",
			cmd: function () {
				Components.classes["@mozilla.org/file/directory_service;1"].getService(Components.interfaces.nsIProperties).get("UChrm", Components.interfaces.nsILocalFile).reveal();
			}
		},
		openProfileDir: {
			name: "打开Profile目录",
			cmd: function () {
				Components.classes["@mozilla.org/file/directory_service;1"].getService(Components.interfaces.nsIProperties).get("ProfD", Components.interfaces.nsILocalFile).reveal();
			}
		},
		openExplorer: {
			name: "打开我的电脑",
			cmd: function () {
				try {
					var file = Components.classes["@mozilla.org/file/directory_service;1"].getService(Components.interfaces.nsIProperties).get("WinD", Components.interfaces.nsILocalFile);
					file.append("explorer.exe");
					var process = Cc["@mozilla.org/process/util;1"].createInstance(Ci.nsIProcess);
					process.init(file);
					process.run(false, [","], 1);
		
				} catch (ex) {
					alert("打开我的电脑失败!")
				}
			}
		},
		openSndVol: {
			name: "打开音量控制器",
			cmd: function () {
				try {
					var file = Components.classes["@mozilla.org/file/directory_service;1"].getService(Components.interfaces.nsIProperties).get("SysD", Components.interfaces.nsILocalFile);
					file.append(/6/.test(navigator.oscpu)?"sndvol.exe":"sndvol32.exe");
					var process = Cc["@mozilla.org/process/util;1"].createInstance(Ci.nsIProcess);
					process.init(file);
					process.run(false, ["-f"], 1);
				} catch (ex) {
					alert("打开音量控制器失败!")
				}
			}
		},
		openTaskMgr: {
			name: "打开任务管理器",
			cmd: function () {
				try {
					var file = Components.classes["@mozilla.org/file/local;1"].createInstance(Components.interfaces.nsILocalFile);
					file.initWithPath(Components.classes["@mozilla.org/file/directory_service;1"].getService(Components.interfaces.nsIProperties).get("SysD", Components.interfaces.nsILocalFile).path + "\\taskmgr.exe");
					file.launch();
				} catch (ex) {
					alert("打开任务管理器失败!")
				}
			}
		},
		openIE: {
			name: "用IE打开当前页",
			cmd: function () {
				try {
					var file = Components.classes["@mozilla.org/file/directory_service;1"].getService(Components.interfaces.nsIProperties).get("ProgF", Components.interfaces.nsILocalFile);
					file.append("Internet Explorer");
					file.append("iexplore.exe");
					var process = Cc["@mozilla.org/process/util;1"].createInstance(Ci.nsIProcess);
					process.init(file);
					process.run(false, [content.location.href], 1);
				} catch (ex) {
					alert("打开IE失败!")
				}
			}
		},
		openPreferences: {
			name: "打开选项窗口",
			cmd: function () {
				openPreferences();
			}
		},
		BrowserOpenAddonsMgrTab: {
			name: "打开附加组件窗口",
			cmd: function () {
				BrowserOpenAddonsMgr();
			}
		},
		BrowserOpenAddonsMgrWindow: {
			name: "打开附加组件窗口(新窗口)",
			cmd: function () {
				window.open("about:addons", "history-pane", "chrome,resizable=yes,centerscreen").resizeTo(800, 600);
			}
		},
		BrowserDownloadsUI: {
			name: "打开下载窗口",
			cmd: function () {
				BrowserDownloadsUI();
			}
		},
		showHistory :{
			name: "打开我的足迹窗口",
			cmd: function () {
				PlacesCommandHook.showPlacesOrganizer('History');
			}
		},
		JavaScriptConsole :{
			name: "打开错误控制台窗口",
			cmd: function () {
				toJavaScriptConsole();
			}
		},
		BrowserCustomizeToolbar : {
			name: "打开定制工具栏窗口",
			cmd: function () {
				BrowserCustomizeToolbar();
			}
		},
		viewHistorySidebar : {
			name: "打开历史窗口(侧边栏)",
			cmd: function () {
				toggleSidebar('viewHistorySidebar');
			}
		},
		viewHistoryNewWindow : {
			name: "打开历史窗口(新窗口)",
			cmd: function () {
				window.open("chrome://browser/content/history/history-panel.xul", "history-pane", "chrome,resizable=yes,centerscreen").resizeTo(400, 600);
			}
		},
		gFindBarToggle : {
			name: "打开或关闭查找栏",
			cmd: function () {
				gFindBar.open()||gFindBar.close();
			}
		},
		openFileMenu: {
			name: "打开文件菜单",
			cmd: function (self,event) {
				document.getElementById("file-menu").menupopup.openPopup(null,null,event.screenX,event.screenY);
			}
		},
		openViewMenu: {
			name: "打开工具菜单",
			cmd: function (self,event) {
				document.getElementById("tools-menu").menupopup.openPopup(null,null,event.screenX,event.screenY);
			}
		},
		openToolsMenu: {
			name: "打开查看菜单",
			cmd: function (self,event) {
				document.getElementById("view-menu").menupopup.openPopup(null,null,event.screenX,event.screenY);
			}
		},
		oepnClipboard : {
			name: "打开剪切板中的网址",
			cmd: function () {
				gBrowser.selectedTab=gBrowser.addTab(readFromClipboard());
			}
		},
		openWebPanel : {
			name: "侧边栏打开当前页面",
			cmd: function () {
				openWebPanel(content.document.title,content.location);
			}
		},
		copyURLToClipboard : {
			name: "复制当前页面URL",
			cmd: function () {
				Components.classes['@mozilla.org/widget/clipboardhelper;1'].getService(Components.interfaces.nsIClipboardHelper).copyString(content.location);
			}
		},
		copyURLTitleToClipboard : {
			name: "复制当前页面URL+标题",
			cmd: function () {
				Components.classes["@mozilla.org/widget/clipboardhelper;1"].getService(Components.interfaces.nsIClipboardHelper).copyString(content.document.title + " - " + content.location); 
			}
		},
		openHomeDialog : {
			name: "将当前页面设为主页",
			cmd: function () {
				openHomeDialog(content.location);
			}
		},
		bookmarkCurrentPages : {
			name: "添加所有标签到书签",
			cmd: function () {
				PlacesCommandHook.bookmarkCurrentPages();
			}
		},
		BrowserViewSourceOfDocument: {
			name: "查看源代码",
			cmd: function () {
				BrowserViewSourceOfDocument(content.document);
			}
		},
		cmd_fullZoomEnlarge: {
			name: "页面放大",
			cmd: function () {
				FullZoom.enlarge();
			}
		},
		cmd_fullZoomReduce: {
			name: "页面缩小",
			cmd: function () {
				FullZoom.reduce();
			}
		},
		cmd_fullZoomReset: {
			name: "页面重置",
			cmd: function () {
				FullZoom.reset();
			}
		},
		gifPlay: {
			name: "切换GIF动画循环",
			cmd: function () {
				Array.forEach(content.document.querySelectorAll("img"), function (gif) {
					try {
						gif.QueryInterface(Ci.nsIImageLoadingContent).getRequest(Ci.nsIImageLoadingContent.CURRENT_REQUEST).image.animationMode ^= 1;
					} catch (e) {}
				})
			}
		},
		imgShow: {
			name: "切换图片显示",
			cmd: function () {
				!/img, embed, object { visibility: hidden/.test(content.document.getElementsByTagName("head")[0].lastElementChild.innerHTML) ? content.document.getElementsByTagName("head")[0].appendChild(content.document.createElement("style")).innerHTML = "img, embed, object { visibility: hidden !important; }html * { background-image: none !important; }" : content.document.getElementsByTagName("head")[0].removeChild(content.document.getElementsByTagName("head")[0].lastElementChild);
			}
		},
		StyleDisabled: {
			name: "切换css样式",
			cmd: function () {
				getMarkupDocumentViewer().authorStyleDisabled^=1;
			}
		},
		proxyTypeA:{
			name: "切换代理(无代理<->系统代理)",
			cmd: function () {
				var pref = Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefService);
				pref.setIntPref("network.proxy.type",pref.getIntPref("network.proxy.type")==0?5:0);
			}
		},
		proxyTypeB:{
			name: "切换代理(无代理<->手动配置代理)",
			cmd: function () {
				var pref = Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefService);
				pref.setIntPref("network.proxy.type",pref.getIntPref("network.proxy.type")==0?1:0);
			}
		},
		contentShow: {
			name: "切换当前网页显示",
			cmd: function () {
				Application.version[0] > 3 ? getMarkupDocumentViewer().setPageMode(content.show = (typeof content.show == "undefined" || content.show == 0), {}) : ((content.show = (typeof content.show == "undefined" || content.show == 0)) ? getMarkupDocumentViewer().hide() : getMarkupDocumentViewer().show());
			}
		},
		contentEditable: {
			name: "切换当前网页可编辑",
			cmd: function () {
				content.document.body.contentEditable=content.document.body.contentEditable=="true"?"false":"true";
			}
		},
		menubarShow: {
			name: "切换菜单栏显示",
			cmd: function () {
				document.getElementById("toolbar-menubar").setAttribute("autohide",document.getElementById("toolbar-menubar").getAttribute("autohide")=="true"?"false":"true");
			}
		},
		toggleTabView: {
			name: "显示标签页组管理器",
			cmd: function () {
				TabView.toggle();
			}
		},
		toggleTabViewNormal: {
			name: "无动画显示标签页组管理器",
			cmd: function () {
				TabView._deck?TabView._deck.selectedIndex^=1:TabView.toggle();
			}
		},
		showAllTabViewTab: {
			name: "临时显示所有标签页组标签",
			cmd: function () {
				Array.forEach(gBrowser.mTabs, function (tab) {
					tab.removeAttribute("hidden");
				})
			}
		},
		nextTabView: {
			name: "切换标签页组",
			cmd: function () {
				gBrowser.selectedTab = Array.filter(gBrowser.mTabs, function (tab) {
					return tab._tPos > gBrowser.mCurrentTab._tPos && tab.getAttribute("hidden") == "true";
				})[0] || Array.filter(gBrowser.mTabs, function (tab) {
					return tab.getAttribute("hidden") == "true";
				})[0];
			}
		},
		addCurrentTabToTabView: {
			name: "将当前tab放入新标签页组",
			cmd: function () {
				TabView.moveTabTo(gBrowser.mCurrentTab);
			}
		},
		openAllTabs: {
			name: "显示所有标签页缩略图",
			cmd: function () {
				allTabs.open();
			}
		},
		captureVisible: {
			name: "页面可见区域截图",
			cmd: function () {
				var canvas = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
				canvas.width = content.innerWidth;
				canvas.height = content.innerHeight;
				var ctx = canvas.getContext("2d");
				ctx.drawWindow(content, content.pageXOffset, content.pageYOffset, canvas.width, canvas.height, "rgb(255,255,255)");
				saveImageURL(canvas.toDataURL(), content.document.title + ".png");
			}
		},
		captureAll: {
			name: "页面所有区域截图",
			cmd: function () {
				var canvas = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
				canvas.width = content.document.documentElement.scrollWidth;
				canvas.height = content.document.documentElement.scrollHeight;
				var ctx = canvas.getContext("2d");
				ctx.drawWindow(content, 0, 0, canvas.width, canvas.height, "rgb(255,255,255)");
				saveImageURL(canvas.toDataURL(), content.document.title + ".png");
			}
		},
		captureFirefox: {
			name: "浏览器界面截图",
			cmd: function () {
				var canvas = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
				canvas.width = innerWidth;
				canvas.height =innerHeight;
				var ctx = canvas.getContext("2d");
				ctx.drawWindow(window, 0, 0, canvas.width, canvas.height, "rgb(255,255,255)");
				saveImageURL(canvas.toDataURL(),  "Firefox.png");
			}
		},
		copyExtensionsList: {
			name: "复制扩展清单",
			cmd: function () {
				Application.extensions ? Components.classes['@mozilla.org/widget/clipboardhelper;1'].getService(Components.interfaces.nsIClipboardHelper).copyString(Application.extensions.all.map(function (item, id) {
					return id + 1 + ": " + item._item.name;
				}).join("\n")) : Application.getExtensions(function (extensions) {
					Components.classes['@mozilla.org/widget/clipboardhelper;1'].getService(Components.interfaces.nsIClipboardHelper).copyString(extensions.all.map(function (item, id) {
						return id + 1 + ": " + item._item.name;
					}).join("\n"));
				})
			}
		},
		togglegPrivateBrowsingUI: {
			name: "切换隐私浏览模式",
			cmd: function () {
				gPrivateBrowsingUI.toggleMode();
			}
		},
		saveDocument: {
			name: "保存当前页面",
			cmd: function () {
				saveDocument(window.content.document);
			}
		},
		minimize: {
			name: "最小化窗口",
			cmd: function (self) {
				self.isMouseDownR = false;
				setTimeout("minimize()", 10);
			}
		},
		maximize: {
			name: "最大化窗口",
			cmd: function () {
				maximize();
			}
		},
		FullScreen: {
			name: "全屏窗口",
			cmd: function () {
				BrowserFullScreen();
			}
		},
		restore: {
			name: "还原窗口",
			cmd: function () {
				restore();
			}
		},
		stayLeft: {
			name: "窗口占用屏幕左半部分",
			cmd: function () {
				resizeTo(screen.availWidth/2,screen.availHeight,moveTo(0,0));
			}
		},
		stayRight: {
			name: "窗口占用屏幕右半部分",
			cmd: function () {
				resizeTo(screen.availWidth/2,screen.availHeight,moveTo(screen.availWidth/2,0));
			}
		},
		restart: {
			name: "重启浏览器",
			cmd: function () {
				Application.restart();
			}
		},
		removeCacheRestart: {
			name: "删除启动缓存并重启",
			cmd: function () {
				Services.appinfo.invalidateCachesOnRestart()||Application.restart();
			}
		},
		goQuitApplication: {
			name: "关闭浏览器",
			cmd: function () {
				goQuitApplication();
			}
		},
	}
	$(function () {
		$("#doNotGenerate").parent().after('<br/><b id="MouseGesturesScriptLineNum" style="float:right">行数:0</b><br/><textarea spellcheck="false" style="resize:none;background-color:#000000;color: #FFFFFF;width:100%;height:500px" id="MouseGesturesScript"></textarea>');
		$("#doNotGenerate").attr("checked",false);
		$("#MouseGesturesScript").bind("keyup", function (e) {
			e.keyCode == 13 && e.ctrlKey && $("#runScript").click();
		});
		var dir = ["U", "D", "L", "R"];
		for (var i in dir) {
			for (var j in dir) {
				if (j != i) {
					for (var p in dir) {
						if (j != p) {
							var title = dir[i] + dir[j] + dir[p];
							var value = title.replace(/U/g, "上").replace(/D/g, "下").replace(/L/g, "左").replace(/R/g, "右");
							$("#gesturesChain").append('<option value="' + title + '" title="' + title + '">' + value + '</option>');
						}
					}
				}
			}
		}
		for (var i in dir) {
			for (var j in dir) {
				if (j != i) {
					for (var p in dir) {
						if (j != p) {
							for (var q in dir) {
								if (q != p) {
									var title = dir[i] + dir[j] + dir[p] + dir[q];
									var value = title.replace(/U/g, "上").replace(/D/g, "下").replace(/L/g, "左").replace(/R/g, "右");
									$("#gesturesChain").append('<option value="' + title + '" title="' + title + '">' + value + '</option>');
								}
							}
						}
					}
				}
			}
		}
		[i for (i in MouseGestures) if (MouseGestures[i].toString() == "[object Object]")].map(
		function (key) {
			$("#gesturesCommand").append('<option value="' + key + '">' + MouseGestures[key].name + '</option>')
		})
		$("#gesturesCommand").parent().after('<label style="color:white">'+$("#gesturesCommand>*").length+'</label>');
	})
// ]]></script>
</form></div><div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="BlogPostCategory"></div>
<div id="EntryTag"></div>
<div id="blog_post_info">
</div>
<div class="clear"></div>
<div id="post_next_prev"></div>
</div>


		</div>
		<div class = "postDesc">posted @ <span id="post-date">2011-12-15 23:19</span> <a href='http://www.cnblogs.com/ziyunfei/
<view-source:http://www.cnblogs.com/ziyunfei/>'>紫云飞</a> 阅读(<span id="post_view_count">...</span>) 评论(<span id="post_comment_count">...</span>)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=2289504
<view-source:https://i.cnblogs.com/EditPosts.aspx?postid=2289504>" rel="nofollow">编辑</a> <a href="#
<view-source:http://www.cnblogs.com/ziyunfei/archive/2011/12/15/2289504.html#>" onclick="AddToWz(2289504);return false;">收藏</a></div>
	</div>
	<script type="text/javascript">var allowComments=true,cb_blogId=102213,cb_entryId=2289504,cb_blogApp=currentBlogApp,cb_blogUserGuid='7ca63bd9-5924-df11-ba8f-001cf0cd104b',cb_entryCreatedDate='2011/12/15 23:19:00';loadViewCount(cb_entryId);</script>
	
</div><!--end: topics 文章、评论容器-->
</div><a name="!comments"></a><div id="blog-comments-placeholder"></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id='comment_form' class='commentform'>
<a name='commentform'></a>
<div id='divCommentShow'></div>
<div id='comment_nav'><span id='span_refresh_tips'></span><a href='javascript:void(0);' onclick='return RefreshCommentList();' id='lnk_RefreshComments' runat='server' clientidmode='Static'>刷新评论</a><a href='#
<view-source:http://www.cnblogs.com/ziyunfei/archive/2011/12/15/2289504.html#>' onclick='return RefreshPage();'>刷新页面</a><a href='#top
<view-source:http://www.cnblogs.com/ziyunfei/archive/2011/12/15/2289504.html#top>'>返回顶部</a></div>
<div id='comment_form_container'></div>
<div class='ad_text_commentbox' id='ad_text_under_commentbox'></div>
<div id='ad_t2'></div>
<div id='opt_under_post'></div>
<div id='ad_c1' class='c_ad_block'></div>
<div id='under_post_news'></div>
<div id='ad_c2' class='c_ad_block'></div>
<div id='under_post_kb'></div>
<div id='HistoryToday' class='c_ad_block'></div>
<script type='text/javascript'>
$(function () {
    setTimeout(function () { incrementViewCount(cb_entryId); }, 50);
    deliverAdT2();
    deliverAdC1();
    deliverAdC2();    
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);    
});
</script>
</div>


	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
			<div id="calendar"><div id="blog-calendar" style="display:none"></div><script type="text/javascript">loadBlogDefaultCalendar();</script></div>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div><script type="text/javascript">loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		
<!--done-->
Copyright &copy;2016 紫云飞
	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->
<!--PageEndHtml Block Begin-->
<script>
enableGoogleAd  = false;
var nodesSnapshot = document.evaluate("//p[starts-with(.,'$')]", document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null );
for ( var i=0 ; i < nodesSnapshot.snapshotLength; i++) {var item = nodesSnapshot.snapshotItem(i); item.innerHTML = item.innerHTML.slice(1);item.classList.add("dollarprompt")}

$(document).on("click", ".html_demo", function(e) {
  var self = $(this)
  var offset = self.offset()
  var y1 = offset.top + 10
  var y2 = offset.top + 10 + 26
  var x1 = offset.left + self.width() - 10 - 68
  var x2 = offset.left + self.width() - 10
  if (e.pageX > x1 && e.pageX < x2 && e.pageY > y1 && e.pageY < y2) {
    open(URL.createObjectURL(new Blob(["<meta charset=utf-8>\n" + self.find("pre").text()], {
      "type": "text/html"
    })))
  }
})

$(".html_demo").attr("spellcheck", "false")
</script>
<!--PageEndHtml Block End-->
</body>
</html>

